apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "@APP_PACKAGE@"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode @APP_VERSION_ANDROID_VERSION@
        versionName "@APP_VERSION@"
    }
    buildTypes {
        releaseUnsigned.initWith(buildTypes.release)
        releaseUnsigned {
            signingConfig null
        }

        debugUnsigned.initWith(buildTypes.debug)
        debugUnsigned {
            signingConfig null
        }
        
    }
    aaptOptions {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['lib']
        }
    }

}

project.afterEvaluate {
    preBuild.dependsOn
}

// https://developer.android.com/studio/build/configure-apk-splits
// Map for the version code that gives each ABI a value.
ext.abiCodes = ['armeabi-v7a': 01, 'arm64-v8a': 11,  x86: 21, x86_64: 31]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
  variant.outputs.each { output ->
    def baseAbiVersionCode = project.ext.abiCodes.get(xbmcABI)
    print baseAbiVersionCode

    output.versionCodeOverride =
            variant.versionCode * 100 + baseAbiVersionCode
  }
}


